{"ast":null,"code":"var _jsxFileName = \"/Users/oscarlai/Desktop/NUS/Year 4/Semester 1/IFS4205/IFS4205-Group3-Crowdsensing-Med-App/frontend/src/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport AuthContext from \"../context/AuthProvider\";\nimport { Navigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport './Login.css';\nimport * as constantClass from '../api/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOGIN_URL = constantClass.LOGIN_URL;\n\nconst Login = () => {\n  _s();\n\n  const {\n    setAuth\n  } = useContext(AuthContext);\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [userRole, setRole] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Comment out to test success\n    // Getting response \n\n    const accessToken = \"response?.data?.accessToken\";\n    const userRole = \"patient\";\n    const name = \"John\";\n    const userId = \"response?.data.userId\"; // Auth Token\n\n    setAuth({\n      userId,\n      name,\n      userRole,\n      accessToken\n    });\n    setUser('');\n    setPwd('');\n    setRole('');\n    setSuccess(true); // try {\n    //     const response = await axios.post(LOGIN_URL,\n    //         JSON.stringify({ user, pwd, userRole }),\n    //         {\n    //             headers: { 'Content-Type': 'application/json' },\n    //             withCredentials: true\n    //         }\n    //     );\n    //     console.log(JSON.stringify(response?.data));\n    //     //console.log(JSON.stringify(response));\n    //     // Getting response \n    //     const accessToken = response?.data?.accessToken;\n    //     const userRole = response?.data?.role;\n    //     const name = response?.data?.name;\n    //     const userId = response?.data.userId;\n    //     // Auth Token\n    //     setAuth({ userId, name, userRole, accessToken });\n    //     setUser('');\n    //     setPwd('');\n    //     setRole('');\n    //     setSuccess(true);\n    // } catch (err) {\n    //     if (!err?.response) {\n    //         setErrMsg('No Server Response');\n    //         // setSuccess(true);\n    //     } else if (err.response?.status === 400) {\n    //         setErrMsg('Missing Username or Password');\n    //     } else if (err.response?.status === 401) {\n    //         setErrMsg('Unauthorized');\n    //     } else {\n    //         setErrMsg('Login Failed');\n    //     }\n    //     errRef.current.focus();\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"IFS4205 Group 3 Medical Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          value: user,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: userRole,\n          name: \"roleDropdown\",\n          onChange: e => setRole(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            selected: true,\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"patient\",\n            children: \"Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"doctor\",\n            children: \"Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medicalStaff\",\n            children: \"Medical Helper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"researcher\",\n            children: \"Researcher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"sDpHe1kfGhwwTnIqlk18qoO7ID8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useState","useEffect","useContext","AuthContext","Navigate","axios","constantClass","LOGIN_URL","Login","setAuth","userRef","errRef","user","setUser","pwd","setPwd","userRole","setRole","errMsg","setErrMsg","success","setSuccess","current","focus","handleSubmit","e","preventDefault","accessToken","name","userId","target","value"],"sources":["/Users/oscarlai/Desktop/NUS/Year 4/Semester 1/IFS4205/IFS4205-Group3-Crowdsensing-Med-App/frontend/src/Login/Login.js"],"sourcesContent":["import { useRef, useState, useEffect, useContext } from 'react';\nimport AuthContext from \"../context/AuthProvider\";\nimport { Navigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport './Login.css'\nimport * as constantClass from '../api/constants'\n\nconst LOGIN_URL = constantClass.LOGIN_URL;\n\nconst Login = () => {\n    const { setAuth } = useContext(AuthContext);\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [user, setUser] = useState('');\n    const [pwd, setPwd] = useState('');\n    const [userRole, setRole] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n       // Comment out to test success\n\n        // Getting response \n        const accessToken = \"response?.data?.accessToken\";\n        const userRole = \"patient\";\n        const name = \"John\"\n        const userId = \"response?.data.userId\";\n\n        // Auth Token\n        setAuth({ userId, name, userRole, accessToken });\n        setUser('');\n        setPwd('');\n        setRole('');\n        setSuccess(true);\n\n        \n        \n\n        // try {\n        //     const response = await axios.post(LOGIN_URL,\n        //         JSON.stringify({ user, pwd, userRole }),\n        //         {\n        //             headers: { 'Content-Type': 'application/json' },\n        //             withCredentials: true\n        //         }\n        //     );\n        //     console.log(JSON.stringify(response?.data));\n        //     //console.log(JSON.stringify(response));\n\n        //     // Getting response \n        //     const accessToken = response?.data?.accessToken;\n        //     const userRole = response?.data?.role;\n        //     const name = response?.data?.name;\n        //     const userId = response?.data.userId;\n\n        //     // Auth Token\n        //     setAuth({ userId, name, userRole, accessToken });\n        //     setUser('');\n        //     setPwd('');\n        //     setRole('');\n        //     setSuccess(true);\n\n\n        // } catch (err) {\n        //     if (!err?.response) {\n        //         setErrMsg('No Server Response');\n        //         // setSuccess(true);\n\n        //     } else if (err.response?.status === 400) {\n        //         setErrMsg('Missing Username or Password');\n        //     } else if (err.response?.status === 401) {\n        //         setErrMsg('Unauthorized');\n        //     } else {\n        //         setErrMsg('Login Failed');\n        //     }\n        //     errRef.current.focus();\n        // }\n    }\n\n    return (\n        <>\n            {success ? (\n                <Navigate replace to=\"/login\" />\n            ) : (\n                <section>\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                    <h1>IFS4205 Group 3 Medical Application</h1>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"username\">Username:</label>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            ref={userRef}\n                            autoComplete=\"off\"\n                            onChange={(e) => setUser(e.target.value)}\n                            value={user}\n                            required\n                        />\n\n                        <label htmlFor=\"password\">Password:</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(e) => setPwd(e.target.value)}\n                            value={pwd}\n                            required\n                        />\n                        <label htmlFor=\"role\">Role: </label>\n                            <select \n                                value={userRole} \n                                name=\"roleDropdown\"\n                                onChange={(e) => setRole(e.target.value)}\n                                required>\n                            <option disabled selected value=\"\">Select Role</option>\n                            <option value=\"patient\">Patient</option>\n                            <option value=\"doctor\">Doctor</option>\n                            <option value=\"medicalStaff\">Medical Helper</option>\n                            <option value=\"researcher\">Researcher</option>\n                        </select>\n                        <button>Sign In</button>\n                    </form>\n                </section>\n            )}\n        </>\n    )\n\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module"}